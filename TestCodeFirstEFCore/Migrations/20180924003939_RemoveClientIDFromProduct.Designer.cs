// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace TestCodeFirstEFCore.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20180924003939_RemoveClientIDFromProduct")]
    partial class RemoveClientIDFromProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestCodeFirstEFCore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new { Id = 1, Name = "Video Games" },
                        new { Id = 2, Name = "Computadores" },
                        new { Id = 3, Name = "Livros" }
                    );
                });

            modelBuilder.Entity("TestCodeFirstEFCore.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new { Id = 1, Name = "William" }
                    );
                });

            modelBuilder.Entity("TestCodeFirstEFCore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Product");

                    b.HasData(
                        new { Id = 1, Name = "MackBook pro 128 gb" },
                        new { Id = 2, Name = "MackBook pro 256 gb" },
                        new { Id = 3, Name = "MackBook Air" },
                        new { Id = 4, Name = "PlayStation 100" }
                    );
                });

            modelBuilder.Entity("TestCodeFirstEFCore.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new { ProductId = 1, CategoryId = 2 },
                        new { ProductId = 2, CategoryId = 2 },
                        new { ProductId = 3, CategoryId = 2 },
                        new { ProductId = 4, CategoryId = 1 }
                    );
                });

            modelBuilder.Entity("TestCodeFirstEFCore.Models.Product", b =>
                {
                    b.HasOne("TestCodeFirstEFCore.Models.Client")
                        .WithMany("Products")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("TestCodeFirstEFCore.Models.ProductCategory", b =>
                {
                    b.HasOne("TestCodeFirstEFCore.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TestCodeFirstEFCore.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
